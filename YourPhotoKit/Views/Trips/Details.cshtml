@model YourPhotoKit.Models.TripModels.AddTripGearViewModel

@{
    ViewData["Title"] = "Details";
}

<h3 style="text-align: center">Trip Details</h3>

<div class="card text-left" style="margin-left: 10px; flex-basis: 70%; margin-right: 20px; margin-bottom: 10px;">
    
    <div class="card-body">
        <h5 class="card-title"><strong>@Html.DisplayFor(modelitem => Model.Trip.Title)</strong></h5>
        <p class="card-text"><strong>Description: </strong> @Html.DisplayFor(modelitem => Model.Trip.Description)</p>
        <p class="card-text"><strong>Start Date: </strong> @Html.DisplayFor(modelitem => Model.Trip.StartDate)</p>
        <p class="card-text"><strong>End Date: </strong> @Html.DisplayFor(modelitem => Model.Trip.EndDate)</p>

        @if (Model.Trip.UserComments == null)
        {
            <p class="card-text"><strong>Trip Comments: </strong> You do not have any comments for this trip.</p>
        }
        else
        {
            <p class="card-text"> <strong>Trip Comments: </strong></p>
            @Html.DisplayNameFor(model => model.Trip.UserComments)

        }
        @if (Model.PickedItems.Count == 0)
        {

            <p class="card-text"><strong>Gear Items Packed: </strong>: You do not currently have any gear for this trip.</p>

        }
        else
        {
            <p class="card-text"><strong>Gear Items Packed: </strong></p>
            @foreach (var item in Model.PickedItems)
            {
                <ul class="list-group list-group-flush">
                    <li class="list-group-item" style="padding-top: 2px; padding-bottom: 2px;">@item.GearItem.Title</li>
                </ul>
               
            }
        }
    </div>
    <div class="card-footer">

        <a class="btn btn-sm btn-warning" asp-action="Edit" asp-route-id="@Model.Trip.TripId">Edit</a> |
        <a class="btn btn-sm btn-danger" asp-action="Delete" asp-route-id="@Model.Trip.TripId">Delete</a> |
        <a class="btn btn-sm btn-light" asp-action="Index">Back to List</a>
    </div>
</div>

